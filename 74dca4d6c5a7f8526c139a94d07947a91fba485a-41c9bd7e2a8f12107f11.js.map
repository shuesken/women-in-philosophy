{"version":3,"sources":["webpack:///./node_modules/lodash/_cloneArrayBuffer.js","webpack:///./node_modules/lodash/_initCloneObject.js","webpack:///./node_modules/lodash/isSet.js","webpack:///./node_modules/lodash/_cloneBuffer.js","webpack:///./node_modules/lodash/_nativeKeysIn.js","webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./node_modules/lodash/_baseAssignIn.js","webpack:///./node_modules/lodash/_copySymbolsIn.js","webpack:///./node_modules/lodash/_getAllKeysIn.js","webpack:///./node_modules/lodash/_baseIsMap.js","webpack:///./node_modules/lodash/_getPrototype.js","webpack:///./node_modules/lodash/_assignValue.js","webpack:///./node_modules/lodash/_baseClone.js","webpack:///./node_modules/lodash/_copyArray.js","webpack:///./node_modules/lodash/_baseKeysIn.js","webpack:///./node_modules/lodash/reverse.js","webpack:///./node_modules/lodash/_copySymbols.js","webpack:///./node_modules/lodash/_baseAssign.js","webpack:///./node_modules/lodash/_cloneDataView.js","webpack:///./node_modules/lodash/_cloneRegExp.js","webpack:///./node_modules/lodash/_baseCreate.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_copyObject.js","webpack:///./node_modules/lodash/keysIn.js","webpack:///./node_modules/lodash/_getSymbolsIn.js","webpack:///./node_modules/lodash/_cloneSymbol.js","webpack:///./node_modules/lodash/_baseIsSet.js","webpack:///./node_modules/lodash/_initCloneByTag.js","webpack:///./node_modules/lodash/_initCloneArray.js","webpack:///./node_modules/lodash/_cloneTypedArray.js","webpack:///./node_modules/lodash/isMap.js"],"names":["Uint8Array","module","exports","arrayBuffer","result","constructor","byteLength","set","baseCreate","getPrototype","isPrototype","object","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","freeExports","nodeType","freeModule","Buffer","root","undefined","allocUnsafe","buffer","isDeep","slice","length","copy","key","Object","push","baseClone","value","CLONE_DEEP_FLAG","copyObject","keysIn","source","getSymbolsIn","baseGetAllKeys","getTag","isObjectLike","overArg","getPrototypeOf","baseAssignValue","eq","hasOwnProperty","prototype","objValue","call","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","keys","cloneableTags","bitmask","customizer","stack","isFlat","isFull","isArr","tag","isFunc","stacked","get","forEach","subValue","add","props","array","index","Array","nativeKeysIn","isProto","nativeReverse","reverse","getSymbols","cloneArrayBuffer","dataView","byteOffset","reFlags","regexp","exec","lastIndex","objectCreate","create","proto","iteratee","isNew","newValue","arrayLikeKeys","baseKeysIn","isArrayLike","arrayPush","stubArray","getOwnPropertySymbols","Symbol","symbolProto","symbolValueOf","valueOf","symbol","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","input","typedArray","baseIsMap","nodeIsMap"],"mappings":"gFAAA,IAAIA,EAAa,EAAQ,QAezBC,EAAOC,QANP,SAA0BC,GACxB,IAAIC,EAAS,IAAID,EAAYE,YAAYF,EAAYG,YAErD,OADA,IAAIN,EAAWI,GAAQG,IAAI,IAAIP,EAAWG,IACnCC,I,uBCZT,IAAII,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QAe1BT,EAAOC,QANP,SAAyBS,GACvB,MAAqC,mBAAtBA,EAAON,aAA8BK,EAAYC,GAE5D,GADAH,EAAWC,EAAaE,M,uBCb9B,IAAIC,EAAY,EAAQ,QACpBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QAGnBC,EAAYD,GAAYA,EAASE,MAmBjCA,EAAQD,EAAYF,EAAUE,GAAaH,EAE/CX,EAAOC,QAAUc,G,wBC1BjB,kBAAW,EAAQ,QAGfC,EAA4Cf,IAAYA,EAAQgB,UAAYhB,EAG5EiB,EAAaF,GAAgC,iBAAVhB,GAAsBA,IAAWA,EAAOiB,UAAYjB,EAMvFmB,EAHgBD,GAAcA,EAAWjB,UAAYe,EAG5BI,EAAKD,YAASE,EACvCC,EAAcH,EAASA,EAAOG,iBAAcD,EAqBhDrB,EAAOC,QAXP,SAAqBsB,EAAQC,GAC3B,GAAIA,EACF,OAAOD,EAAOE,QAEhB,IAAIC,EAASH,EAAOG,OAChBvB,EAASmB,EAAcA,EAAYI,GAAU,IAAIH,EAAOnB,YAAYsB,GAGxE,OADAH,EAAOI,KAAKxB,GACLA,K,8CCZTH,EAAOC,QAVP,SAAsBS,GACpB,IAAIP,EAAS,GACb,GAAc,MAAVO,EACF,IAAK,IAAIkB,KAAOC,OAAOnB,GACrBP,EAAO2B,KAAKF,GAGhB,OAAOzB,I,qBChBT,IAAI4B,EAAY,EAAQ,QA4BxB/B,EAAOC,QAJP,SAAmB+B,GACjB,OAAOD,EAAUC,EAAOC,K,uBCzB1B,IAAIC,EAAa,EAAQ,QACrBC,EAAS,EAAQ,QAerBnC,EAAOC,QAJP,SAAsBS,EAAQ0B,GAC5B,OAAO1B,GAAUwB,EAAWE,EAAQD,EAAOC,GAAS1B,K,qBCbtD,IAAIwB,EAAa,EAAQ,QACrBG,EAAe,EAAQ,QAc3BrC,EAAOC,QAJP,SAAuBmC,EAAQ1B,GAC7B,OAAOwB,EAAWE,EAAQC,EAAaD,GAAS1B,K,qBCZlD,IAAI4B,EAAiB,EAAQ,QACzBD,EAAe,EAAQ,QACvBF,EAAS,EAAQ,QAcrBnC,EAAOC,QAJP,SAAsBS,GACpB,OAAO4B,EAAe5B,EAAQyB,EAAQE,K,qBCbxC,IAAIE,EAAS,EAAQ,QACjBC,EAAe,EAAQ,QAgB3BxC,EAAOC,QAJP,SAAmB+B,GACjB,OAAOQ,EAAaR,IAVT,gBAUmBO,EAAOP,K,qBCdvC,IAGIxB,EAHU,EAAQ,OAGHiC,CAAQZ,OAAOa,eAAgBb,QAElD7B,EAAOC,QAAUO,G,qBCLjB,IAAImC,EAAkB,EAAQ,QAC1BC,EAAK,EAAQ,QAMbC,EAHchB,OAAOiB,UAGQD,eAoBjC7C,EAAOC,QARP,SAAqBS,EAAQkB,EAAKI,GAChC,IAAIe,EAAWrC,EAAOkB,GAChBiB,EAAeG,KAAKtC,EAAQkB,IAAQgB,EAAGG,EAAUf,UACxCX,IAAVW,GAAyBJ,KAAOlB,IACnCiC,EAAgBjC,EAAQkB,EAAKI,K,qBCvBjC,IAAIiB,EAAQ,EAAQ,QAChBC,EAAY,EAAQ,QACpBC,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QACtBC,EAAY,EAAQ,QACpBC,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,QACxBC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBpB,EAAS,EAAQ,QACjBqB,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzBC,EAAkB,EAAQ,QAC1BC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAW,EAAQ,QACnBnD,EAAQ,EAAQ,QAChBoD,EAAO,EAAQ,QACfhC,EAAS,EAAQ,QAqCjBiC,EAAgB,GACpBA,EA9Bc,sBA8BWA,EA7BV,kBA8BfA,EAfqB,wBAeWA,EAdd,qBAelBA,EA9Bc,oBA8BWA,EA7BX,iBA8BdA,EAfiB,yBAeWA,EAdX,yBAejBA,EAdc,sBAcWA,EAbV,uBAcfA,EAbe,uBAaWA,EA5Bb,gBA6BbA,EA5BgB,mBA4BWA,EA3BX,mBA4BhBA,EA3BgB,mBA2BWA,EA1Bd,gBA2BbA,EA1BgB,mBA0BWA,EAzBX,mBA0BhBA,EAhBe,uBAgBWA,EAfJ,8BAgBtBA,EAfgB,wBAeWA,EAdX,yBAcsC,EACtDA,EArCe,kBAqCWA,EApCZ,qBAqCdA,EA5BiB,qBA4BW,EA8F5BpE,EAAOC,QA5EP,SAAS8B,EAAUC,EAAOqC,EAASC,EAAY1C,EAAKlB,EAAQ6D,GAC1D,IAAIpE,EACAqB,EAnEgB,EAmEP6C,EACTG,EAnEgB,EAmEPH,EACTI,EAnEmB,EAmEVJ,EAKb,GAHIC,IACFnE,EAASO,EAAS4D,EAAWtC,EAAOJ,EAAKlB,EAAQ6D,GAASD,EAAWtC,SAExDX,IAAXlB,EACF,OAAOA,EAET,IAAK+D,EAASlC,GACZ,OAAOA,EAET,IAAI0C,EAAQX,EAAQ/B,GACpB,GAAI0C,GAEF,GADAvE,EAASyD,EAAe5B,IACnBR,EACH,OAAO+B,EAAUvB,EAAO7B,OAErB,CACL,IAAIwE,EAAMpC,EAAOP,GACb4C,EA9EM,qBA8EGD,GA7EJ,8BA6EsBA,EAE/B,GAAIX,EAAShC,GACX,OAAOsB,EAAYtB,EAAOR,GAE5B,GA/EY,mBA+ERmD,GAxFM,sBAwFcA,GAAmBC,IAAWlE,GAEpD,GADAP,EAAUqE,GAAUI,EAAU,GAAKd,EAAgB9B,IAC9CR,EACH,OAAOgD,EACHf,EAAczB,EAAOqB,EAAalD,EAAQ6B,IAC1CwB,EAAYxB,EAAOoB,EAAWjD,EAAQ6B,QAEvC,CACL,IAAKoC,EAAcO,GACjB,OAAOjE,EAASsB,EAAQ,GAE1B7B,EAAS0D,EAAe7B,EAAO2C,EAAKnD,IAIxC+C,IAAUA,EAAQ,IAAItB,GACtB,IAAI4B,EAAUN,EAAMO,IAAI9C,GACxB,GAAI6C,EACF,OAAOA,EAETN,EAAMjE,IAAI0B,EAAO7B,GAEbY,EAAMiB,GACRA,EAAM+C,SAAQ,SAASC,GACrB7E,EAAO8E,IAAIlD,EAAUiD,EAAUX,EAASC,EAAYU,EAAUhD,EAAOuC,OAE9DN,EAAMjC,IACfA,EAAM+C,SAAQ,SAASC,EAAUpD,GAC/BzB,EAAOG,IAAIsB,EAAKG,EAAUiD,EAAUX,EAASC,EAAY1C,EAAKI,EAAOuC,OAIzE,IAIIW,EAAQR,OAAQrD,GAJLoD,EACVD,EAASb,EAAeD,EACxBc,EAASrC,EAASgC,GAEkBnC,GASzC,OARAkB,EAAUgC,GAASlD,GAAO,SAASgD,EAAUpD,GACvCsD,IAEFF,EAAWhD,EADXJ,EAAMoD,IAIR7B,EAAYhD,EAAQyB,EAAKG,EAAUiD,EAAUX,EAASC,EAAY1C,EAAKI,EAAOuC,OAEzEpE,I,mBC/ITH,EAAOC,QAXP,SAAmBmC,EAAQ+C,GACzB,IAAIC,GAAS,EACT1D,EAASU,EAAOV,OAGpB,IADAyD,IAAUA,EAAQE,MAAM3D,MACf0D,EAAQ1D,GACfyD,EAAMC,GAAShD,EAAOgD,GAExB,OAAOD,I,qBChBT,IAAIjB,EAAW,EAAQ,QACnBzD,EAAc,EAAQ,QACtB6E,EAAe,EAAQ,QAMvBzC,EAHchB,OAAOiB,UAGQD,eAwBjC7C,EAAOC,QAfP,SAAoBS,GAClB,IAAKwD,EAASxD,GACZ,OAAO4E,EAAa5E,GAEtB,IAAI6E,EAAU9E,EAAYC,GACtBP,EAAS,GAEb,IAAK,IAAIyB,KAAOlB,GACD,eAAPkB,IAAyB2D,GAAY1C,EAAeG,KAAKtC,EAAQkB,KACrEzB,EAAO2B,KAAKF,GAGhB,OAAOzB,I,mBC5BT,IAGIqF,EAHaH,MAAMvC,UAGQ2C,QA6B/BzF,EAAOC,QAJP,SAAiBkF,GACf,OAAgB,MAATA,EAAgBA,EAAQK,EAAcxC,KAAKmC,K,qBC9BpD,IAAIjD,EAAa,EAAQ,QACrBwD,EAAa,EAAQ,QAczB1F,EAAOC,QAJP,SAAqBmC,EAAQ1B,GAC3B,OAAOwB,EAAWE,EAAQsD,EAAWtD,GAAS1B,K,qBCZhD,IAAIwB,EAAa,EAAQ,QACrBiC,EAAO,EAAQ,QAenBnE,EAAOC,QAJP,SAAoBS,EAAQ0B,GAC1B,OAAO1B,GAAUwB,EAAWE,EAAQ+B,EAAK/B,GAAS1B,K,qBCbpD,IAAIiF,EAAmB,EAAQ,QAe/B3F,EAAOC,QALP,SAAuB2F,EAAUpE,GAC/B,IAAID,EAASC,EAASmE,EAAiBC,EAASrE,QAAUqE,EAASrE,OACnE,OAAO,IAAIqE,EAASxF,YAAYmB,EAAQqE,EAASC,WAAYD,EAASvF,c,mBCXxE,IAAIyF,EAAU,OAed9F,EAAOC,QANP,SAAqB8F,GACnB,IAAI5F,EAAS,IAAI4F,EAAO3F,YAAY2F,EAAO3D,OAAQ0D,EAAQE,KAAKD,IAEhE,OADA5F,EAAO8F,UAAYF,EAAOE,UACnB9F,I,qBCbT,IAAI+D,EAAW,EAAQ,QAGnBgC,EAAerE,OAAOsE,OAUtB5F,EAAc,WAChB,SAASG,KACT,OAAO,SAAS0F,GACd,IAAKlC,EAASkC,GACZ,MAAO,GAET,GAAIF,EACF,OAAOA,EAAaE,GAEtB1F,EAAOoC,UAAYsD,EACnB,IAAIjG,EAAS,IAAIO,EAEjB,OADAA,EAAOoC,eAAYzB,EACZlB,GAZM,GAgBjBH,EAAOC,QAAUM,G,mBCRjBP,EAAOC,QAZP,SAAmBkF,EAAOkB,GAIxB,IAHA,IAAIjB,GAAS,EACT1D,EAAkB,MAATyD,EAAgB,EAAIA,EAAMzD,SAE9B0D,EAAQ1D,IAC8B,IAAzC2E,EAASlB,EAAMC,GAAQA,EAAOD,KAIpC,OAAOA,I,qBClBT,IAAIhC,EAAc,EAAQ,QACtBR,EAAkB,EAAQ,QAsC9B3C,EAAOC,QA1BP,SAAoBmC,EAAQ8C,EAAOxE,EAAQ4D,GACzC,IAAIgC,GAAS5F,EACbA,IAAWA,EAAS,IAKpB,IAHA,IAAI0E,GAAS,EACT1D,EAASwD,EAAMxD,SAEV0D,EAAQ1D,GAAQ,CACvB,IAAIE,EAAMsD,EAAME,GAEZmB,EAAWjC,EACXA,EAAW5D,EAAOkB,GAAMQ,EAAOR,GAAMA,EAAKlB,EAAQ0B,QAClDf,OAEaA,IAAbkF,IACFA,EAAWnE,EAAOR,IAEhB0E,EACF3D,EAAgBjC,EAAQkB,EAAK2E,GAE7BpD,EAAYzC,EAAQkB,EAAK2E,GAG7B,OAAO7F,I,qBCpCT,IAAI8F,EAAgB,EAAQ,QACxBC,EAAa,EAAQ,QACrBC,EAAc,EAAQ,QA6B1B1G,EAAOC,QAJP,SAAgBS,GACd,OAAOgG,EAAYhG,GAAU8F,EAAc9F,GAAQ,GAAQ+F,EAAW/F,K,uBC5BxE,IAAIiG,EAAY,EAAQ,QACpBnG,EAAe,EAAQ,QACvBkF,EAAa,EAAQ,QACrBkB,EAAY,EAAQ,QAYpBvE,EATmBR,OAAOgF,sBASqB,SAASnG,GAE1D,IADA,IAAIP,EAAS,GACNO,GACLiG,EAAUxG,EAAQuF,EAAWhF,IAC7BA,EAASF,EAAaE,GAExB,OAAOP,GAN8ByG,EASvC5G,EAAOC,QAAUoC,G,uBCxBjB,IAAIyE,EAAS,EAAQ,QAGjBC,EAAcD,EAASA,EAAOhE,eAAYzB,EAC1C2F,EAAgBD,EAAcA,EAAYE,aAAU5F,EAaxDrB,EAAOC,QAJP,SAAqBiH,GACnB,OAAOF,EAAgBnF,OAAOmF,EAAchE,KAAKkE,IAAW,K,uBCd9D,IAAI3E,EAAS,EAAQ,QACjBC,EAAe,EAAQ,QAgB3BxC,EAAOC,QAJP,SAAmB+B,GACjB,OAAOQ,EAAaR,IAVT,gBAUmBO,EAAOP,K,qBCdvC,IAAI2D,EAAmB,EAAQ,QAC3BwB,EAAgB,EAAQ,QACxBC,EAAc,EAAQ,QACtBC,EAAc,EAAQ,QACtBC,EAAkB,EAAQ,QAwE9BtH,EAAOC,QApCP,SAAwBS,EAAQiE,EAAKnD,GACnC,IAAI+F,EAAO7G,EAAON,YAClB,OAAQuE,GACN,IA3BiB,uBA4Bf,OAAOgB,EAAiBjF,GAE1B,IAvCU,mBAwCV,IAvCU,gBAwCR,OAAO,IAAI6G,GAAM7G,GAEnB,IAjCc,oBAkCZ,OAAOyG,EAAczG,EAAQc,GAE/B,IAnCa,wBAmCI,IAlCJ,wBAmCb,IAlCU,qBAkCI,IAjCH,sBAiCkB,IAhClB,sBAiCX,IAhCW,sBAgCI,IA/BG,6BA+BmB,IA9BzB,uBA8ByC,IA7BzC,uBA8BV,OAAO8F,EAAgB5G,EAAQc,GAEjC,IAjDS,eAkDP,OAAO,IAAI+F,EAEb,IAnDY,kBAoDZ,IAjDY,kBAkDV,OAAO,IAAIA,EAAK7G,GAElB,IAtDY,kBAuDV,OAAO0G,EAAY1G,GAErB,IAxDS,eAyDP,OAAO,IAAI6G,EAEb,IAzDY,kBA0DV,OAAOF,EAAY3G,M,mBCvEzB,IAGImC,EAHchB,OAAOiB,UAGQD,eAqBjC7C,EAAOC,QAZP,SAAwBkF,GACtB,IAAIzD,EAASyD,EAAMzD,OACfvB,EAAS,IAAIgF,EAAM/E,YAAYsB,GAOnC,OAJIA,GAA6B,iBAAZyD,EAAM,IAAkBtC,EAAeG,KAAKmC,EAAO,WACtEhF,EAAOiF,MAAQD,EAAMC,MACrBjF,EAAOqH,MAAQrC,EAAMqC,OAEhBrH,I,qBCtBT,IAAIwF,EAAmB,EAAQ,QAe/B3F,EAAOC,QALP,SAAyBwH,EAAYjG,GACnC,IAAID,EAASC,EAASmE,EAAiB8B,EAAWlG,QAAUkG,EAAWlG,OACvE,OAAO,IAAIkG,EAAWrH,YAAYmB,EAAQkG,EAAW5B,WAAY4B,EAAW/F,U,qBCZ9E,IAAIgG,EAAY,EAAQ,QACpB9G,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QAGnB8G,EAAY9G,GAAYA,EAASoD,MAmBjCA,EAAQ0D,EAAY/G,EAAU+G,GAAaD,EAE/C1H,EAAOC,QAAUgE","file":"74dca4d6c5a7f8526c139a94d07947a91fba485a-41c9bd7e2a8f12107f11.js","sourcesContent":["var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array == null ? array : nativeReverse.call(array);\n}\n\nmodule.exports = reverse;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n"],"sourceRoot":""}